# Generated by Django 2.2.9 on 2020-08-10 21:15

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('foto', models.ImageField(upload_to='')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Estado',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Chofer',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('calificacion', models.DecimalField(decimal_places=1, default=0, max_digits=2)),
                ('estado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Estado')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('main.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('main.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Vehiculo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('foto', models.ImageField(upload_to='')),
                ('confort', models.CharField(choices=[('alto', 'Alto'), ('medio', 'Medio'), ('bajo', 'Bajo')], max_length=20)),
                ('seguridad', models.CharField(choices=[('alta', 'Alta'), ('media', 'Media'), ('baja', 'Baja')], max_length=20)),
                ('tipo', models.CharField(choices=[('moto', 'Moto'), ('carro', 'Carro'), ('van', 'Van'), ('omnibus', 'Omnibus'), ('camion', 'Camion')], max_length=20)),
                ('capacidad', models.IntegerField()),
                ('chofer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Chofer')),
            ],
        ),
        migrations.CreateModel(
            name='Solicitud',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('fecha', models.DateTimeField(auto_now_add=True)),
                ('inicio_latitud', models.DecimalField(decimal_places=3, max_digits=6)),
                ('inicio_longitud', models.DecimalField(decimal_places=3, max_digits=6)),
                ('fin_latitud', models.DecimalField(decimal_places=3, max_digits=6)),
                ('fin_longitud', models.DecimalField(decimal_places=3, max_digits=6)),
                ('descripcion', models.CharField(max_length=255)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Cliente')),
            ],
        ),
        migrations.CreateModel(
            name='Ranking',
            fields=[
                ('posicion', models.IntegerField(primary_key=True, serialize=False)),
                ('puntos', models.IntegerField()),
                ('chofer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Chofer')),
            ],
        ),
        migrations.CreateModel(
            name='Localizacion',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('fecha', models.DateTimeField(auto_now_add=True)),
                ('latitud', models.DecimalField(decimal_places=3, max_digits=6)),
                ('longitud', models.DecimalField(decimal_places=3, max_digits=6)),
                ('chofer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Chofer')),
            ],
        ),
        migrations.CreateModel(
            name='Factura',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('cantidad', models.DecimalField(decimal_places=2, max_digits=10)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('chofer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Chofer')),
            ],
        ),
        migrations.CreateModel(
            name='Carrera',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('fecha', models.DateTimeField(auto_now_add=True)),
                ('distancia', models.DecimalField(decimal_places=2, max_digits=7)),
                ('completada', models.BooleanField()),
                ('solicitud', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Solicitud')),
                ('chofer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Chofer')),
            ],
        ),
    ]
